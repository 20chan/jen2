generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-3.0.x"]
}

datasource db {
  provider = "sqlite"
  url = env("DATABASE_URL")
}

model Transaction {
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  date DateTime
  amount Int
  balance Int
  kind String
  content String
  categories CategoriesOnTransaction[]
  memo String

  parentId Int?
  parent Transaction? @relation("TransactionChildren", fields: [parentId], references: [id])
  children Transaction[] @relation("TransactionChildren")
}

model Category {
  id Int @id @default(autoincrement())
  name String @unique
  label String
  color String
  Transaction CategoriesOnTransaction[]

  // Array<{ keys: string[]; values: string[] }
  rulesSerialized String

  archived Boolean @default(false)
  tag Boolean @default(true)
}

model CategoriesOnTransaction {
  transactionId Int
  transaction Transaction @relation(fields: [transactionId], references: [id], onDelete: Cascade)
  categoryId Int
  category Category @relation(fields: [categoryId], references: [id])
  assignedAt DateTime @default(now())
  manuallyAssigned Boolean @default(false)

  @@id([transactionId, categoryId])
}

model Goal {
  id Int @id @default(autoincrement())
  order Int

  // 'monthly' | 'daily'
  type String
  categoryMatch String
  target Int
}